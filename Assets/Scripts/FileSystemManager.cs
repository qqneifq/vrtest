using JetBrains.Annotations;
using System;
using System.Collections;
using System.Collections.Generic;
using TMPro;
using UnityEngine;
using UnityEngine.UI;

public class VRFileExplorer : MonoBehaviour
{
    public Transform contentParent; // ???????? ??? ????????? ??????????
    public GameObject fileItemPrefab; // ?????? ??? ??????????? ?????? ? ?????
    [SerializeField]
    private string currentPath;

    // ?????????? ??? ?????????? (Right ??? Left)
    public OVRInput.Controller controller = OVRInput.Controller.RTouch;

    // ??? ? ?????????
    public LineRenderer lineRenderer; // ????? ??? ????
    public GameObject pointer; // ?????????-??????
    public float maxRaycastDistance = 100f; // ???????????? ????? ????

    private RaycastHit hitInfo; // ?????????? ? ???????????? ???? ? ????????

    void Start()
    {
        currentPath = @"C:\Users\qqnei\Desktop"/*"/storage/emulated/0/"*/;
        DisplayDirectory(currentPath);

        // ???? ????????? ?? ??????????, ??????? ??????? ?????????? ?????? (????????, ??????)
        if (!pointer)
        {
            pointer = GameObject.CreatePrimitive(PrimitiveType.Sphere);
            pointer.transform.localScale = new Vector3(0.02f, 0.02f, 0.02f); // ????????? ??????
            pointer.GetComponent<Collider>().enabled = false; // ????????? ?????????, ????? ?? ?? ?????
        }
    }

    // ????? ??? ??????????? ??????????? ??????????
    public void DisplayDirectory(string path)
    {
        foreach (Transform child in contentParent)
        {
            Destroy(child.gameObject);
        }

        currentPath = path;
        string[] directories = System.IO.Directory.GetDirectories(path);
        string[] files = System.IO.Directory.GetFiles(path);

        foreach (string dir in directories)
        {
            Debug.Log("folder " + dir);
            CreateItem(dir, true);
        }

        foreach (string file in files)
        {
            Debug.Log("file: " + file);
            CreateItem(file, false);
        }
    }


    void CreateItem(string path, bool isDirectory)
    {
        GameObject item = Instantiate(fileItemPrefab, contentParent);
        var buttonText = item.GetComponentInChildren<TextMeshProUGUI>();
        if (buttonText != null)
        {
            // ????????????? ????? ??? ?????? (??? ????? ??? ?????)
            buttonText.text = System.IO.Path.GetFileName(path);
        }

        // ??????? ????????? Button ? ????????? ?????????? ?????
        Button button = item.GetComponent<Button>();
        
        if (button != null)
        {
            // ?????????? ???????? += ??? ?????????? ??????????? ?????
            button.onClick.AddListener(() => OnItemClicked(path, isDirectory));
        }

        // ????????? ????????? ??? ??????????
        item.AddComponent<BoxCollider>();

        // ????????? ????? ? ???????????
        VRClickable clickable = item.AddComponent<VRClickable>();
        clickable.Initialize(path, isDirectory, this);
    }

    private void Button_onClick()
    {
        throw new NotImplementedException();
    }

    void Update()
    {
        // ????????? ??????????? ???? ?? ???????????
        UpdateRaycast();
    }

    // ????? ??? ?????????? ???? ? ?????????
    void UpdateRaycast()
    {
        // ???????? ??????? ? ??????????? ???????????
        Vector3 controllerPosition = OVRInput.GetLocalControllerPosition(controller);
        Quaternion controllerRotation = OVRInput.GetLocalControllerRotation(controller);

        // ??????? ??? ?? ???????????
        Ray ray = new Ray(controllerPosition, controllerRotation * Vector3.forward);

        // ???????? ??? ? LineRenderer (???????????? ????)
        lineRenderer.SetPosition(0, ray.origin);

        // ???????? ????? ??????????? ???? ? ?????????
        if (Physics.Raycast(ray, out hitInfo, maxRaycastDistance))
        {
            // ???????? ? ????????????? ?????????
            pointer.SetActive(true);
            pointer.transform.position = hitInfo.point;

            // ????????? ????? ????? (????) ? ????? ???????????
            lineRenderer.SetPosition(1, hitInfo.point);

            // ?????????, ??? ??? ??????? ?? ????????????? ?????? (????????, VRClickable)
            VRClickable clickable = hitInfo.collider.GetComponent<VRClickable>();
            if (clickable != null)
            {
                // ????? ????? ??????????? ?????? ????????? (????????, ????????? ???????)
                clickable.OnHover();

                // ???????????? ??????? ????????
                if (OVRInput.GetDown(OVRInput.Button.PrimaryIndexTrigger))
                {
                    clickable.OnClick();
                }
            }
        }
        else
        {
            // ???? ??? ???????????, ????????? ?????????
            pointer.SetActive(false);
            lineRenderer.SetPosition(1, ray.origin + ray.direction * maxRaycastDistance);
        }
    }

    // ?????????? ?????
    public void OnItemClicked(string path, bool isDirectory)
    {
        if (isDirectory)
        {
            DisplayDirectory(path);
        }
        else
        {
            OpenFile(path);
        }
    }

    void OpenFile(string path)
    {
        Debug.Log("?????? ????: " + path);
    }

}
public class VRClickable : MonoBehaviour
{
    private string path;
    private bool isDirectory;
    private VRFileExplorer fileExplorer;
    private Color originalColor;

    public void Initialize(string filePath, bool directory, VRFileExplorer explorer)
    {
        path = filePath;
        isDirectory = directory;
        fileExplorer = explorer;
    }

    // ????? ??? ????????? ????????? ?? ??????
    public void OnHover()
    {
        // ?????? ???? ??????? ??? ?????????
        GetComponent<Renderer>().material.color = Color.yellow;
    }

    // ????? ??? ????????? ?????
    public void OnClick()
    {
        fileExplorer.OnItemClicked(path, isDirectory);
    }

    void OnMouseExit()
    {
        // ?????????? ???????? ???? ??? ?????? ????
        GetComponent<Renderer>().material.color = originalColor;
    }
}
