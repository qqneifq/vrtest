using Oculus.Interaction;
using UnityEngine;

public class SelectableEventListener : MonoBehaviour
{
    // ?????????, ??? ? ??? ???? ?????? ?? PointableCanvasModule
    [SerializeField]
    private PointableCanvasModule _pointableCanvasModule;

    private void OnEnable()
    {
        if (_pointableCanvasModule != null)
        {
            // ??????????? ??? ?????? ??? ??????? ? ???????????? ?????
            PointableCanvasModule.WhenSelected += HandleWhenSelected;
        }
    }

    private void OnDisable()
    {
        if (_pointableCanvasModule != null)
        {
            // ??????????? ??? ?????? ??? ??????? ? ???????????? ?????
            PointableCanvasModule.WhenSelected -= HandleWhenSelected;
        }
    }

    private void HandleWhenSelected(PointableCanvasEventArgs args)
    {
        if (args.Hovered != null)
        {
            // ????? ?????????? ? Hovered ???????
            Debug.Log($"Hovered Object: {args.Hovered}");
            Debug.Log($"Type of Hovered Object: {args.Hovered.GetType()}");

            // ????????? ????? GameObject, ???? Hovered - ??? GameObject
            var gameObject = args.Hovered as GameObject;
            if (gameObject != null)
            {
                Debug.Log($"GameObject Name: {gameObject.name}");
            }
            else
            {
                Debug.LogWarning("Hovered object is not a GameObject.");
            }
        }
        else
        {
            Debug.Log("Selected empty area.");
        }
    }
}
